# syntax=docker/dockerfile:1
ARG BASE_IMAGE=docker.io/busybox:1.36.1
# hadolint ignore=DL3006
FROM ${BASE_IMAGE}

# Because this is a data container and is never run, only mounted via
# the --volumes-from parameter, the operating system type doesn't matter.
# So we use busybox, a really small distro, with just enough support to
# be able to download and install the binaries for cinc.

ARG CINC_URL_AMD64
ARG CINC_SHA256_AMD64
ARG CINC_URL_ARM64
ARG CINC_SHA256_ARM64
# This argument is automatically populated by BuildKit
ARG TARGETARCH

# We're using busybox with /bin/sh so DL4006 does not apply
# hadolint ignore=DL4006
RUN <<EOF
  case "$TARGETARCH" in \
    amd64) \
      CINC_URL=${CINC_URL_AMD64} \
      CINC_SHA256=${CINC_SHA256_AMD64} \
      ;; \
    arm64) \
      CINC_URL=${CINC_URL_ARM64} \
      CINC_SHA256=${CINC_SHA256_ARM64} \
      ;; \
     *) echo "unsupported architecture"; exit 1 ;; \
  esac
  echo "wget -q --no-check-certificate -O /tmp/cinc-client.rpm ${CINC_URL}"
  wget --no-check-certificate -O /tmp/cinc-client.rpm ${CINC_URL}
  echo "${CINC_SHA256} /tmp/cinc-client.rpm" | sha256sum -c -
  # Since busybox includes tools to extract rpm packages, we fetch the rpm
  # package for cinc-client. However since this is a data volume and this
  # container never actually runs, this will work with any OS distro, as it
  # is just serving the binaries to run on other OS, like an NFS mount.
  rpm2cpio /tmp/cinc-client.rpm | cpio -idm
  rm -f /tmp/cinc-client.rpm
EOF

VOLUME [ "/opt/cinc" ]
