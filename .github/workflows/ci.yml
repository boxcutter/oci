name: ci

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      manual_paths:
        description: 'Custom paths to check, separated by spaces'
        required: true
        default: ''
jobs:
  # Job to run change detection
  changes:
    runs-on: ubuntu-latest
    outputs:
      # Expose matched filters as job 'images' output variable
      images: ${{ steps.filter.outputs.changes }}
    steps:
      - uses: actions/checkout@v4

      - name: Determine Paths to Build for Auto Trigger
        uses: dorny/paths-filter@v2
        id: filter
        with:
          # Use context to get the branch where commits were pushed.
          # If there is only one long-lived branch (e.g. master),
          # you can specify it directly.
          # If it's not configured, the repository default branch is used.
          base: ${{ github.ref }}
          filters: | 
            aws-cli: 'aws-cli/**'
            buildpack-deps/ubuntu/jammy/curl: 'buildpack-deps/ubuntu/jammy/curl/**'
            buildpack-deps/ubuntu/jammy/scm: 'buildpack-deps/ubuntu/jammy/scm/**'
            buildpack-deps/ubuntu/jammy: 'buildpack-deps/ubuntu/jammy/**'
            dokken/centos-7: 'dokken/centos-7/**'
            dokken/centos-stream-9: 'dokken/centos-stream-9/**'
            dokken/oraclelinux-7: 'dokken/oraclelinux-7/**'
            dokken/oraclelinux-8: 'dokken/oraclelinux-8/**'
            dokken/oraclelinux-9: 'dokken/oraclelinux-9/**'
            dokken/ubuntu-20.04: 'dokken/ubuntu-20.04/**'
            dokken/ubuntu-22.04: 'dokken/ubuntu-22.04/**'
            doctl: 'doctl/**'
            fpm: 'fpm/**'
            meshcmd: 'meshcmd/**'
            pulumi/pulumi-base: 'pulumi/pulumi-base/**'
            pulumi/pulumi-python: 'pulumi/pulumi-python/**'
            python/3.8/jammy: 'python/3.8/jammy/**'
            python/3.8/slim-jammy: 'python/3.8/slim-jammy/**'
            python/3.9/jammy: 'python/3.9/jammy/**'
            python/3.9/slim-jammy: 'python/3.9/slim-jammy/**'
            python/3.10/jammy: 'python/3.10/jammy/**'
            python/3.10/slim-jammy: 'python/3.10/slim-jammy/**'
            python/3.11/jammy: 'python/3.11/jammy/**'
            python/3.11/slim-jammy: 'python/3.11/slim-jammy/**'
            python/3.12/jammy: 'python/3.12/jammy/**'
            python/3.12/slim-jammy: 'python/3.12/slim-jammy/**'
            
  # Job to build and test each of the modified images
  build:
    if: ${{ needs.changes.outputs.images != '' && needs.changes.outputs.images != '[]' }}
    needs: changes
    strategy:
      matrix:
        # Parse JSON array containing names of all filters matching any of changed files
        # e.g. ['image1', 'image2'] if both image folders contains changes
        image: ${{ fromJSON(needs.changes.outputs.images) }}
    runs-on: ubuntu-latest
    steps:
      - uses: boxcutter/container-build-publish-action@main
        with:
          workdir: ${{ matrix.image }}
          dockerhub-username: ${{ secrets.CONTAINER_REGISTRY_USERNAME }}
          dockerhub-password: ${{ secrets.CONTAINER_DESCRIPTION_PASSWORD }}
  
  manual:
    if: ${{ github.event.inputs.manual_paths != '' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        manual_path: ${{ fromJSON(github.event.inputs.manual_paths) }}
    steps:
      - name: Debug
        run: echo ${{ matrix.image }}
