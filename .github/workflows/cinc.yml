# cinc-auditor has its own workflow because it requires a special tag to work
# with Test Kitchen and so it has a unique test harness, specified via the
# "test-image" and "test-entrypoint" parameters.
name: cinc

on:
  push:
    branches: [ main ]
    paths:
      - 'dokken/cinc/**'
  # pull_request:
  #   branches: [ main ]
  #   paths:
  #     - 'dokken/cinc/**'
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      # - name: Log in to Docker Hub
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ secrets.CONTAINER_REGISTRY_USERNAME }}
      #     password: ${{ secrets.CONTAINER_DESCRIPTION_PASSWORD }}

      - name: Enable Docker Build Cloud
        env:
          DOCKER_BUILDKIT: 1
          DOCKER_CLI_EXPERIMENTAL: enabled
          DOCKER_USERNAME: ${{ secrets.CONTAINER_REGISTRY_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.CONTAINER_REGISTRY_PASSWORD }}
        run: |
          echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
          docker buildx create --use --driver cloud boxcutter/testy

      # - name: Set up Docker Buildx with Docker Cloud
      #   run: |
      #     docker buildx create --driver cloud boxcutter/testy --use

      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v3
      #   with:
      #     driver: cloud # Use Docker Cloud Builder

      # - name: Log in to Docker Hub
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ secrets.CONTAINER_REGISTRY_USERNAME }}
      #     password: ${{ secrets.CONTAINER_DESCRIPTION_PASSWORD }}

      - name: Run `docker buildx bake` with Docker Cloud
        run: |
          docker buildx bake --builder cloud --push --progress=plain
