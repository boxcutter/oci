name: ros-humble

on:
  push:
    branches: [ main ]
    paths:
      - 'ros/humble/ubuntu/jammy/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'ros/humble/ubuntu/jammy/**'
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ros/humble/ubuntu/jammy
    steps:
      - uses: actions/checkout@v4

      - name: Install QEMU static binaries
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build locally for testing
        uses: docker/bake-action@v4
        with:
          workdir: ros/humble/ubuntu/jammy
          targets: local
          load: true

      - name: Run tests on the image matrix with cinc-auditor
        shell: bash
        run: |
          $(git rev-parse --show-toplevel)/bin/test-matrix.sh

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.CONTAINER_REGISTRY_USERNAME }}
          password: ${{ secrets.CONTAINER_REGISTRY_PASSWORD }}

      - name: Build and push
        uses: docker/bake-action@v4
        with:
          workdir: ros/humble/ubuntu/jammy
          push: ${{ github.event_name != 'pull_request' }}

      - name: Get the image name
        if: ${{ github.event_name != 'pull_request' }}
        id: image_name
        shell: bash
        run: |
          echo "image_name=$($(git rev-parse --show-toplevel)/bin/image-name.sh)" >> $GITHUB_ENV

      - name: Get the image description
        if: ${{ github.event_name != 'pull_request' }}
        id: image_description
        shell: bash
        run: |
          echo "image_description=$($(git rev-parse --show-toplevel)/bin/image-description.sh)" >> $GITHUB_ENV

      - name: Get the image readme filepath
        if: ${{ github.event_name != 'pull_request' }}
        id: image_readme_filepath
        shell: bash
        run: |
          echo "readme_filepath=$($(git rev-parse --show-toplevel)/bin/image-readme.sh)" >> $GITHUB_ENV
        
      - name: Update Docker Hub Description
        if: ${{ github.event_name != 'pull_request' }}
        uses: peter-evans/dockerhub-description@v3
        with:
          username: ${{ secrets.CONTAINER_REGISTRY_USERNAME }}
          password: ${{ secrets.CONTAINER_REGISTRY_PASSWORD }}
          repository: boxcutter/${{ env.image_name }}
          short-description: ${{ env.image_description }}
          readme-filepath: ${{ env.image_readme_filepath }}
        
