name: pr

on:
  pull_request:
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  # Job to run change detection
  changes:
    runs-on: ubuntu-latest
    outputs:
      # Expose matched filters as job 'images' output variable
      images: ${{ steps.filter.outputs.changes }}
    steps:
      - uses: actions/checkout@v3
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          # Use context to get the branch where commits were pushed.
          # If there is only one long-lived branch (e.g. master),
          # you can specify it directly.
          # If it's not configured, the repository default branch is used.
          base: ${{ github.ref }}
          filters: |
            bats: 'bats/**'
            bootstrap/cinc-auditor: 'bootstrap/cinc-auditor/**'
            bootstrap/dasel: 'bootstrap/dasel/**'
            bootstrap/hadolint: 'bootstrap/hadolint/**'
            doctl: 'doctl/**'
            shellcheck: 'shellcheck/**'

  # Job to build and test each of the modified images
  build:
    needs: changes
    strategy:
      matrix:
        # Parse JSON array containing names of all filters matching any of changed files
        # e.g. ['image1', 'image2'] if both image folders contains changes
        image: ${{ fromJSON(needs.changes.outputs.images) }}
    if: ${{ needs.changes.outputs.images != '[]' && needs.changes.outputs.images != '' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ matrix.image }}
    steps:
      - uses: actions/checkout@v3

      - name: Check the Containerfile with hadolint
        run: |
          $(git rev-parse --show-toplevel)/bin/lint.sh
      
      - name: Install QEMU static binaries
        uses: docker/setup-qemu-action@v2
      
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Set the tags
        id: tags
        run: |
          echo "tags=$($(git rev-parse --show-toplevel)/bin/list-tags.sh -c)" >> $GITHUB_ENV

      - name: Build locally for testing
        uses: docker/build-push-action@v3
        with:
          load: true
          context: ${{ matrix.image }}
          file: ${{ matrix.image }}/Containerfile
          tags: ${{ env.tags }}

      - name: Run tests on the image with cinc-auditor
        run: |
          $(git rev-parse --show-toplevel)/bin/test.sh
