# syntax=docker/dockerfile:1
ARG BASE_IMAGE=docker.io/ubuntu:jammy-20240911.1
# hadolint ignore=DL3006
FROM ${BASE_IMAGE} AS base

FROM base AS sources

ARG UBUNTU_ARCHIVE_APT_PROXY
ARG UBUNTU_SECURITY_APT_PROXY
ARG UBUNTU_PORTS_APT_PROXY

# Allow replacing APT sources with local mirror
RUN <<EOF
  dpkgArch="$(dpkg --print-architecture)"
  case "${dpkgArch##*-}" in \
    amd64) \
      sed -i "s|http://archive.ubuntu.com/ubuntu/|${UBUNTU_ARCHIVE_APT_PROXY}|g" /etc/apt/sources.list ; \
      sed -i "s|http://security.ubuntu.com/ubuntu/|${UBUNTU_SECURITY_APT_PROXY}|g" /etc/apt/sources.list \
      ;; \
    arm64) \
      sed -i "s|http://ports.ubuntu.com/ubuntu-ports/|${UBUNTU_PORTS_APT_PROXY}|g" /etc/apt/sources.list \
      ;; \
    *) echo "unsupported architecture"; exit 1 ;; \
  esac
EOF

FROM sources AS download

ARG ROS_PACKAGES_URI
ARG RAW_GITHUBUSERCONTENT_BASE_URL

# download gpg key
RUN <<EOF
  apt-get update
  apt-get install -y --no-install-recommends \
    ca-certificates \
    curl
  curl -sSL "${RAW_GITHUBUSERCONTENT_BASE_URL}/ros/rosdistro/master/ros.key" \
    -o /usr/share/keyrings/ros2-latest-archive-keyring.gpg
  rm -rf /var/lib/apt/lists/*
EOF

FROM download AS ros-core

# setup timezone
RUN echo 'Etc/UTC' > /etc/timezone && \
    ln -s /usr/share/zoneinfo/Etc/UTC /etc/localtime && \
    apt-get update && \
    apt-get install -q -y --no-install-recommends tzdata && \
    rm -rf /var/lib/apt/lists/*

# install packages
RUN apt-get update && apt-get install -q -y --no-install-recommends \
    dirmngr \
    gnupg2 \
    && rm -rf /var/lib/apt/lists/*

# setup sources.list
RUN echo "deb [ signed-by=/usr/share/keyrings/ros2-latest-archive-keyring.gpg ] ${ROS_PACKAGES_URI} jammy main" > /etc/apt/sources.list.d/ros2-latest.list

# setup environment
ENV LANG=C.UTF-8
ENV LC_ALL=C.UTF-8

ENV ROS_DISTRO=humble

# install ros2 packages
RUN apt-get update && apt-get install -y --no-install-recommends \
    ros-humble-ros-core=0.10.0-1* \
    && rm -rf /var/lib/apt/lists/*

# setup entrypoint
COPY ./ros_entrypoint.sh /

ENTRYPOINT ["/ros_entrypoint.sh"]
CMD ["bash"]

FROM ros-core AS ros-base

# install bootstrap tools
RUN apt-get update && apt-get install --no-install-recommends -y \
    build-essential \
    git \
    python3-colcon-common-extensions \
    python3-colcon-mixin \
    python3-rosdep \
    python3-vcstool \
    && rm -rf /var/lib/apt/lists/*

# bootstrap rosdep
RUN rosdep init && \
  rosdep update --rosdistro "$ROS_DISTRO"

# setup colcon mixin and metadata
RUN colcon mixin add default \
      "${RAW_GITHUBUSERCONTENT_BASE_URL}/colcon/colcon-mixin-repository/master/index.yaml" && \
    colcon mixin update && \
    colcon metadata add default \
      "${RAW_GITHUBUSERCONTENT_BASE_URL}/colcon/colcon-metadata-repository/master/index.yaml" && \
    colcon metadata update

# install ros2 packages
RUN apt-get update && apt-get install -y --no-install-recommends \
    ros-humble-ros-base=0.10.0-1* \
    && rm -rf /var/lib/apt/lists/*

FROM ros-base AS perception

# install ros2 packages
RUN apt-get update && apt-get install -y --no-install-recommends \
    ros-humble-perception=0.10.0-1* \
    && rm -rf /var/lib/apt/lists/*

FROM ros-base AS simulation

# install ros2 packages
RUN apt-get update && apt-get install -y --no-install-recommends \
    ros-humble-simulation=0.10.0-1* \
    && rm -rf /var/lib/apt/lists/*

FROM ros-base AS desktop

# install ros2 packages
RUN apt-get update && apt-get install -y --no-install-recommends \
    ros-humble-desktop=0.10.0-1* \
    && rm -rf /var/lib/apt/lists/*

FROM desktop AS desktop-full

# install ros2 packages
RUN apt-get update && apt-get install -y --no-install-recommends \
    ros-humble-desktop-full=0.10.0-1* \
    && rm -rf /var/lib/apt/lists/*
